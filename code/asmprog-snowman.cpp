
int64_t __gmon_start__ = 0;

void _init() {
    int64_t rax1;

    rax1 = __gmon_start__;
    if (rax1) {
        rax1();
    }
    return;
}

int64_t __cxa_finalize = 0;

void fun_5a0(int64_t rdi) {
    goto __cxa_finalize;
}

void fun_598(int64_t rdi, int64_t rsi, ...);

void fun_590(int64_t rdi, int64_t rsi);

int64_t do_the_thing(int64_t rdi) {
    uint32_t v2;
    uint32_t v3;
    uint32_t edx4;
    uint32_t edx5;

    v2 = 4;
    v3 = 0;
    while (reinterpret_cast<int32_t>(v3) <= reinterpret_cast<int32_t>(44)) {
        __asm__("cdq ");
        edx4 = edx5 >> 31;
        if ((v3 + edx4 & 1) - edx4 != 1) {
            fun_598("%s (even): %d\n", "Current val", "%s (even): %d\n", "Current val");
            ++v3;
            edx5 = v2;
            v2 = v3 + edx5 & 0xff;
        } else {
            ++v3;
            edx5 = v3 - 1;
            fun_598("%s (odd): %d\n", "Current val");
            v2 = v2 ^ v3;
        }
    }
    fun_590("This is the end", "Current val");
    return 0;
}

int64_t printf = 0;

void fun_598(int64_t rdi, int64_t rsi, ...) {
    goto printf;
}

int64_t puts = 0;

void fun_590(int64_t rdi, int64_t rsi) {
    goto puts;
}

int64_t _ITM_deregisterTMCloneTable = 0;

int64_t deregister_tm_clones(int64_t rdi) {
    int64_t rax2;

    rax2 = 7;
    if (1 || (rax2 = _ITM_deregisterTMCloneTable, rax2 == 0)) {
        return rax2;
    } else {
        goto rax2;
    }
}

int64_t g200fb8 = 0;

void fun_580() {
    goto g200fb8;
}

int64_t __libc_start_main = 0;

int64_t main(int32_t edi, int64_t rsi);

void __libc_csu_init(int32_t edi, int64_t rsi, int64_t rdx);

void __libc_csu_fini();

void _start() {
    void* rsp1;
    int64_t rdx2;
    int64_t rax3;

    rsp1 = reinterpret_cast<void*>(reinterpret_cast<int64_t>(__zero_stack_offset()) + 8);
    __libc_start_main(main, __return_address(), rsp1, __libc_csu_init, __libc_csu_fini, rdx2, (reinterpret_cast<uint64_t>(rsp1) & 0xfffffffffffffff0) - 8 - 8, rax3);
    __asm__("hlt ");
}

void _fini() {
    return;
}

void fun_657() {
    int64_t v1;

    goto v1;
}

int64_t _Jv_RegisterClasses = 0;

int64_t _ITM_registerTMCloneTable = 0;

void fun_6c2() {
    int64_t rax1;
    int64_t rax2;

    rax1 = _Jv_RegisterClasses;
    if (rax1) {
        rax1();
    }
    if (1) 
        goto 0x660;
    rax2 = _ITM_registerTMCloneTable;
    if (!rax2) 
        goto 0x660;
    goto rax2;
}

int64_t main(int32_t edi, int64_t rsi) {
    int64_t rax3;

    fun_590("Beginning the program", rsi);
    rax3 = do_the_thing("Beginning the program");
    return rax3;
}

void __libc_csu_fini() {
    return;
}

signed char __bss_start = 0;

int64_t __dso_handle = 0x201008;

int64_t __do_global_dtors_aux() {
    int1_t zf1;
    int1_t zf2;
    int64_t rdi3;
    int64_t rax4;

    zf1 = __bss_start == 0;
    if (zf1) {
        zf2 = __cxa_finalize == 0;
        if (!zf2) {
            rdi3 = __dso_handle;
            fun_5a0(rdi3);
        }
        rax4 = deregister_tm_clones(rdi3);
        __bss_start = 1;
    }
    return rax4;
}

int64_t __JCR_END__ = 0;

void frame_dummy() {
    int1_t zf1;

    zf1 = __JCR_END__ == 0;
    if (!zf1) 
        goto 0x6c8; else 
        goto "???";
}

void __libc_csu_init(int32_t edi, int64_t rsi, int64_t rdx) {
    int32_t r15d4;
    int64_t r14_5;
    int64_t r13_6;
    int64_t rbx7;
    int64_t rdi8;

    r15d4 = edi;
    r14_5 = rsi;
    r13_6 = rdx;
    _init();
    if (!0) {
        *reinterpret_cast<int32_t*>(&rbx7) = 0;
        *reinterpret_cast<int32_t*>(reinterpret_cast<int64_t>(&rbx7) + 4) = 0;
        do {
            *reinterpret_cast<int32_t*>(&rdi8) = r15d4;
            *reinterpret_cast<int32_t*>(reinterpret_cast<int64_t>(&rdi8) + 4) = 0;
            *reinterpret_cast<int64_t*>(0x200dd0 + rbx7 * 8)(rdi8, r14_5, r13_6);
            ++rbx7;
        } while (1 != rbx7);
    }
    return;
}
