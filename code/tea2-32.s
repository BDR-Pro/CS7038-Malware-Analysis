
tea2-32.o:     file format elf32-i386


Disassembly of section .text:

00000000 <encrypt>:
   0:	55                   	push   %ebp
   1:	89 e5                	mov    %esp,%ebp
   3:	83 ec 30             	sub    $0x30,%esp
   6:	e8 fc ff ff ff       	call   7 <encrypt+0x7>
   b:	05 01 00 00 00       	add    $0x1,%eax
  10:	8b 45 08             	mov    0x8(%ebp),%eax
  13:	8b 00                	mov    (%eax),%eax
  15:	89 45 d0             	mov    %eax,-0x30(%ebp)
  18:	8b 45 08             	mov    0x8(%ebp),%eax
  1b:	8b 40 04             	mov    0x4(%eax),%eax
  1e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
  21:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
  28:	c7 45 e0 b9 79 37 9e 	movl   $0x9e3779b9,-0x20(%ebp)
  2f:	8b 45 0c             	mov    0xc(%ebp),%eax
  32:	8b 00                	mov    (%eax),%eax
  34:	89 45 e4             	mov    %eax,-0x1c(%ebp)
  37:	8b 45 0c             	mov    0xc(%ebp),%eax
  3a:	8b 40 04             	mov    0x4(%eax),%eax
  3d:	89 45 e8             	mov    %eax,-0x18(%ebp)
  40:	8b 45 0c             	mov    0xc(%ebp),%eax
  43:	8b 40 08             	mov    0x8(%eax),%eax
  46:	89 45 ec             	mov    %eax,-0x14(%ebp)
  49:	8b 45 0c             	mov    0xc(%ebp),%eax
  4c:	8b 40 0c             	mov    0xc(%eax),%eax
  4f:	89 45 f0             	mov    %eax,-0x10(%ebp)
  52:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
  59:	eb 78                	jmp    d3 <encrypt+0xd3>
  5b:	8b 45 e0             	mov    -0x20(%ebp),%eax
  5e:	01 45 d8             	add    %eax,-0x28(%ebp)
  61:	8b 45 d4             	mov    -0x2c(%ebp),%eax
  64:	c1 e0 04             	shl    $0x4,%eax
  67:	89 c2                	mov    %eax,%edx
  69:	8b 45 e4             	mov    -0x1c(%ebp),%eax
  6c:	01 d0                	add    %edx,%eax
  6e:	89 45 f4             	mov    %eax,-0xc(%ebp)
  71:	8b 55 d4             	mov    -0x2c(%ebp),%edx
  74:	8b 45 d8             	mov    -0x28(%ebp),%eax
  77:	01 d0                	add    %edx,%eax
  79:	89 45 f8             	mov    %eax,-0x8(%ebp)
  7c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
  7f:	c1 e8 05             	shr    $0x5,%eax
  82:	89 c2                	mov    %eax,%edx
  84:	8b 45 e8             	mov    -0x18(%ebp),%eax
  87:	01 d0                	add    %edx,%eax
  89:	89 45 fc             	mov    %eax,-0x4(%ebp)
  8c:	8b 45 f4             	mov    -0xc(%ebp),%eax
  8f:	33 45 f8             	xor    -0x8(%ebp),%eax
  92:	33 45 fc             	xor    -0x4(%ebp),%eax
  95:	01 45 d0             	add    %eax,-0x30(%ebp)
  98:	8b 45 d0             	mov    -0x30(%ebp),%eax
  9b:	c1 e0 04             	shl    $0x4,%eax
  9e:	89 c2                	mov    %eax,%edx
  a0:	8b 45 ec             	mov    -0x14(%ebp),%eax
  a3:	01 d0                	add    %edx,%eax
  a5:	89 45 f4             	mov    %eax,-0xc(%ebp)
  a8:	8b 55 d0             	mov    -0x30(%ebp),%edx
  ab:	8b 45 d8             	mov    -0x28(%ebp),%eax
  ae:	01 d0                	add    %edx,%eax
  b0:	89 45 f8             	mov    %eax,-0x8(%ebp)
  b3:	8b 45 d0             	mov    -0x30(%ebp),%eax
  b6:	c1 e8 05             	shr    $0x5,%eax
  b9:	89 c2                	mov    %eax,%edx
  bb:	8b 45 f0             	mov    -0x10(%ebp),%eax
  be:	01 d0                	add    %edx,%eax
  c0:	89 45 fc             	mov    %eax,-0x4(%ebp)
  c3:	8b 45 f4             	mov    -0xc(%ebp),%eax
  c6:	33 45 f8             	xor    -0x8(%ebp),%eax
  c9:	33 45 fc             	xor    -0x4(%ebp),%eax
  cc:	01 45 d4             	add    %eax,-0x2c(%ebp)
  cf:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)
  d3:	83 7d dc 1f          	cmpl   $0x1f,-0x24(%ebp)
  d7:	76 82                	jbe    5b <encrypt+0x5b>
  d9:	8b 45 08             	mov    0x8(%ebp),%eax
  dc:	8b 55 d0             	mov    -0x30(%ebp),%edx
  df:	89 10                	mov    %edx,(%eax)
  e1:	8b 45 08             	mov    0x8(%ebp),%eax
  e4:	8d 50 04             	lea    0x4(%eax),%edx
  e7:	8b 45 d4             	mov    -0x2c(%ebp),%eax
  ea:	89 02                	mov    %eax,(%edx)
  ec:	90                   	nop
  ed:	c9                   	leave  
  ee:	c3                   	ret    

000000ef <decrypt>:
  ef:	55                   	push   %ebp
  f0:	89 e5                	mov    %esp,%ebp
  f2:	83 ec 30             	sub    $0x30,%esp
  f5:	e8 fc ff ff ff       	call   f6 <decrypt+0x7>
  fa:	05 01 00 00 00       	add    $0x1,%eax
  ff:	8b 45 08             	mov    0x8(%ebp),%eax
 102:	8b 00                	mov    (%eax),%eax
 104:	89 45 d0             	mov    %eax,-0x30(%ebp)
 107:	8b 45 08             	mov    0x8(%ebp),%eax
 10a:	8b 40 04             	mov    0x4(%eax),%eax
 10d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 110:	c7 45 d8 20 37 ef c6 	movl   $0xc6ef3720,-0x28(%ebp)
 117:	c7 45 e0 b9 79 37 9e 	movl   $0x9e3779b9,-0x20(%ebp)
 11e:	8b 45 0c             	mov    0xc(%ebp),%eax
 121:	8b 00                	mov    (%eax),%eax
 123:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 126:	8b 45 0c             	mov    0xc(%ebp),%eax
 129:	8b 40 04             	mov    0x4(%eax),%eax
 12c:	89 45 e8             	mov    %eax,-0x18(%ebp)
 12f:	8b 45 0c             	mov    0xc(%ebp),%eax
 132:	8b 40 08             	mov    0x8(%eax),%eax
 135:	89 45 ec             	mov    %eax,-0x14(%ebp)
 138:	8b 45 0c             	mov    0xc(%ebp),%eax
 13b:	8b 40 0c             	mov    0xc(%eax),%eax
 13e:	89 45 f0             	mov    %eax,-0x10(%ebp)
 141:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
 148:	eb 78                	jmp    1c2 <decrypt+0xd3>
 14a:	8b 45 d0             	mov    -0x30(%ebp),%eax
 14d:	c1 e0 04             	shl    $0x4,%eax
 150:	89 c2                	mov    %eax,%edx
 152:	8b 45 ec             	mov    -0x14(%ebp),%eax
 155:	01 d0                	add    %edx,%eax
 157:	89 45 f4             	mov    %eax,-0xc(%ebp)
 15a:	8b 55 d0             	mov    -0x30(%ebp),%edx
 15d:	8b 45 d8             	mov    -0x28(%ebp),%eax
 160:	01 d0                	add    %edx,%eax
 162:	89 45 f8             	mov    %eax,-0x8(%ebp)
 165:	8b 45 d0             	mov    -0x30(%ebp),%eax
 168:	c1 e8 05             	shr    $0x5,%eax
 16b:	89 c2                	mov    %eax,%edx
 16d:	8b 45 f0             	mov    -0x10(%ebp),%eax
 170:	01 d0                	add    %edx,%eax
 172:	89 45 fc             	mov    %eax,-0x4(%ebp)
 175:	8b 45 f4             	mov    -0xc(%ebp),%eax
 178:	33 45 f8             	xor    -0x8(%ebp),%eax
 17b:	33 45 fc             	xor    -0x4(%ebp),%eax
 17e:	29 45 d4             	sub    %eax,-0x2c(%ebp)
 181:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 184:	c1 e0 04             	shl    $0x4,%eax
 187:	89 c2                	mov    %eax,%edx
 189:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 18c:	01 d0                	add    %edx,%eax
 18e:	89 45 f4             	mov    %eax,-0xc(%ebp)
 191:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 194:	8b 45 d8             	mov    -0x28(%ebp),%eax
 197:	01 d0                	add    %edx,%eax
 199:	89 45 f8             	mov    %eax,-0x8(%ebp)
 19c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 19f:	c1 e8 05             	shr    $0x5,%eax
 1a2:	89 c2                	mov    %eax,%edx
 1a4:	8b 45 e8             	mov    -0x18(%ebp),%eax
 1a7:	01 d0                	add    %edx,%eax
 1a9:	89 45 fc             	mov    %eax,-0x4(%ebp)
 1ac:	8b 45 f4             	mov    -0xc(%ebp),%eax
 1af:	33 45 f8             	xor    -0x8(%ebp),%eax
 1b2:	33 45 fc             	xor    -0x4(%ebp),%eax
 1b5:	29 45 d0             	sub    %eax,-0x30(%ebp)
 1b8:	8b 45 e0             	mov    -0x20(%ebp),%eax
 1bb:	29 45 d8             	sub    %eax,-0x28(%ebp)
 1be:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)
 1c2:	83 7d dc 1f          	cmpl   $0x1f,-0x24(%ebp)
 1c6:	76 82                	jbe    14a <decrypt+0x5b>
 1c8:	8b 45 08             	mov    0x8(%ebp),%eax
 1cb:	8b 55 d0             	mov    -0x30(%ebp),%edx
 1ce:	89 10                	mov    %edx,(%eax)
 1d0:	8b 45 08             	mov    0x8(%ebp),%eax
 1d3:	8d 50 04             	lea    0x4(%eax),%edx
 1d6:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 1d9:	89 02                	mov    %eax,(%edx)
 1db:	90                   	nop
 1dc:	c9                   	leave  
 1dd:	c3                   	ret    

Disassembly of section .text.__x86.get_pc_thunk.ax:

00000000 <__x86.get_pc_thunk.ax>:
   0:	8b 04 24             	mov    (%esp),%eax
   3:	c3                   	ret    
